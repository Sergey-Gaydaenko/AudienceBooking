
@using Booking.Models
@using Booking.Repositories.Repositories
@using Booking.Services.Services
@using Booking.Web.Localization;
@using Booking.Web.ViewModels.Manage;
@using Booking.Web.ViewModels.Profile
@using Microsoft.AspNet.Identity
@model Booking.Web.ViewModels.Profile.ProfileViewModel



<div style="background-color: white"> 

        <div id="delete" style="width: 100%; height: 30px; ">
            @using (Html.BeginForm("Delete", "Manage", new { userId = Model.Id }))
            {
                @Html.AntiForgeryToken()
                <input type="submit" id="delete" value=@Localization.Delete class="profile-submit" style="float: right" />
            }
        </div>
@using (Ajax.BeginForm("EditUser", "Manage", new{ Model.UserInfo }, new AjaxOptions
{
    InsertionMode = InsertionMode.Replace,
    HttpMethod = "Post",
    UpdateTargetId = "page-main"
}, new { style="width:50%; display: inline-block; float:left"}))
{
        <div style="padding: 50px 0px ">
            @Html.HiddenFor(m=>m.UserInfo.Id)
            @Html.AntiForgeryToken()
            @Html.ValidationMessageFor(m => m.UserInfo.Name, "", new { @class = "validation-error" })
            @Html.TextBoxFor(m => m.UserInfo.Name, new { @class = "profile-input-edit", @id = "name", })

            @Html.ValidationMessageFor(m => m.UserInfo.Email, "", new { @class = "validation-error" })
            @Html.TextBoxFor(m => m.UserInfo.Email, new { @class = "profile-input-edit", @id = "email", })
            @if (Model.UserInfo.IsEditorAdmin)
            {
                <div>
                    <input id="admin" type="submit" value="Admin" />
                </div>
            }
            <div style="width: 65%; padding-top: 15px">
                <input type="submit" id="save" value=@Localization.Save class="profile-submit" />
            </div>
            </div>
}
        <div style="width:50%; float:right; top: -200px;" class="password-place">
            <div id="passwordReplace" style="width: 60%;  margin: 0px auto">
                @using (Ajax.BeginForm("ChangePassword", "Manage", new AjaxOptions
            {
                InsertionMode = InsertionMode.Replace,
                HttpMethod = "Post",
                UpdateTargetId = "passwordReplace"
            }))
            {
                    @Html.AntiForgeryToken()
                    <H3 style="text-align: center">@Localization.PasswordChange</H3>
                    @Html.ValidationMessageFor(m => m.ChangePasswordForm.OldPassword, "", new { @class = "validation-error" })
                    @Html.PasswordFor(m => m.ChangePasswordForm.OldPassword, new { @class = "profile-input", placeholder = @Localization.PasswordOld, @id = "oldPassword", })

                    @Html.ValidationMessageFor(m => m.ChangePasswordForm.NewPassword, "", new { @class = "validation-error" })
                    @Html.PasswordFor(m => m.ChangePasswordForm.NewPassword, new { @class = "profile-input", placeholder = @Localization.PasswordNew, @id = "newPassword", })

                    @Html.ValidationMessageFor(m => m.ChangePasswordForm.ConfirmPassword, "", new { @class = "validation-error" })
                    @Html.PasswordFor(m => m.ChangePasswordForm.ConfirmPassword, new { @class = "profile-input", placeholder = @Localization.PasswordNewRepeat, @id = "confirmNewPassword", })

                    <input type="submit" value=@Localization.Save class="profile-submit" />

                    if (ViewData["PasswordSuccess"] != null)
                    {
                        <div style="margin: 0px auto; text-align:center">
                            <i class="fa fa-check-circle" style="font-size: 30px; text-align: center" aria-hidden="true"></i><span>@Localization.PasswordSuccess</span>
                        </div>
                    }
                    if (ViewData["PasswordFaild"] != null)
                    {
                        <span>@Localization.PasswordError</span>
                    }
                }
            </div>
        </div>    
</div>

